Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/kinetic64"

  # configurando server web
  config.vm.define "phpweb" do |phpweb|
    phpweb.vm.network "forwarded_port", guest: 8080, host: 8080
    phpweb.vm.network "private_network", ip: "192.168.56.195"
      
    phpweb.vm.synced_folder "./configs", "/configs" # criando uma pasta de config
    phpweb.vm.synced_folder "./src", "/src" # criando uma pasta de config
    
    # provisonando maquina virtual
    phpweb.vm.provision "shell",
      inline: "cat /configs/id_vagrant.pub >> .ssh/authorized_keys"
    phpweb.vm.provision "shell",
      inline: "apt update && apt install -y puppet"
 
    phpweb.vm.provision "puppet" do |puppet|
      puppet.manifests_path = "./configs/manifests"
      puppet.manifest_file = "phpweb.pp"
    end
  end

  # configurando server mysqldb
  config.vm.define "mysqlserver" do |mysqlserver|
    mysqlserver.vm.network "private_network", ip: "192.168.56.187"

    mysqlserver.vm.synced_folder "./configs", "/configs" # criando uma pasta de config
    mysqlserver.vm.synced_folder ".", "/vagrant", disabled: true #desabilitando pasta padrão que é montada por default

    # provisonando maquina virtual
    mysqlserver.vm.provision "shell",
      inline: "cat /configs/id_vagrant.pub >> .ssh/authorized_keys"
  end

  # configurando server web
  config.vm.define "ansible" do |ansible|
    ansible.vm.network "private_network", ip: "192.168.56.175"

    # provisonando maquina virtual
    ansible.vm.provision "shell",
      inline: "cp /vagrant/id_vagrant /home/vagrant && chmod 600 /home/vagrant/id_vagrant && chown vagrant:vagrant /home/vagrant/id_vagrant"

    ansible.vm.provision "shell",
      inline: "apt update && apt install -y ansible"
    
    ansible.vm.provision "shell",
      inline: "ansible-playbook -i /vagrant/configs/ansible/hosts /vagrant/configs/ansible/playbook.yml"
    
  end
end 